#include <iostream>
#include <vector>

class TodoListManager {
private:
    std::vector<std::string> tasks;

public:
    void addTask(const std::string& task) {
        tasks.push_back(task);
        std::cout << "Task \"" << task << "\" added successfully.\n";
    }

    void viewTasks() {
        if (tasks.empty()) {
            std::cout << "No tasks found.\n";
        } else {
            std::cout << "Tasks:\n";
            for (size_t i = 0; i < tasks.size(); ++i) {
                std::cout << i + 1 << ". " << tasks[i] << '\n';
            }
        }
    }

    void deleteTask(size_t taskIndex) {
        if (taskIndex >= 1 && taskIndex <= tasks.size()) {
            std::string deletedTask = tasks[taskIndex - 1];
            tasks.erase(tasks.begin() + taskIndex - 1);
            std::cout << "Task \"" << deletedTask << "\" deleted successfully.\n";
        } else {
            std::cout << "Invalid task index.\n";
        }
    }
};

int main() {
    TodoListManager todoManager;

    while (true) {
        std::cout << "\n===== TO-DO LIST MANAGER =====\n";
        std::cout << "1. Add Task\n";
        std::cout << "2. View Tasks\n";
        std::cout << "3. Delete Task\n";
        std::cout << "4. Exit\n";

        int choice;
        std::cout << "Enter your choice (1-4): ";
        std::cin >> choice;

        switch (choice) {
            case 1: {
                std::string task;
                std::cout << "Enter the task: ";
                std::cin.ignore(); // Clear the newline character from the buffer
                std::getline(std::cin, task);
                todoManager.addTask(task);
                break;
            }
            case 2:
                todoManager.viewTasks();
                break;
            case 3: {
                size_t taskIndex;
                std::cout << "Enter the task index to delete: ";
                std::cin >> taskIndex;
                todoManager.deleteTask(taskIndex);
                break;
            }
            case 4:
                std::cout << "Exiting the to-do list manager. Goodbye!\n";
                return 0;
            default:
                std::cout << "Invalid choice. Please enter a valid option.\n";
        }
    }

    return 0;
}
